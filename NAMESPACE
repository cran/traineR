export(train.qda,train.lda,train.ada, train.adabag,train.rpart, train.bayes, train.randomForest, train.knn, train.nnet, train.neuralnet, train.svm, train.xgboost, train.glm,train.glmnet, contr.dummy, contr.ordinal,
       confusion.matrix, general.indexes, prediction.variable.balance,numerical.predictive.power,categorical.predictive.power,boosting.importance.plot,varplot,
       ROC.plot,ROC.area)

importFrom("stats", "na.fail", "na.omit", "na.pass", "update", "as.formula", "predict", "binomial", "glm","reorder","model.matrix","formula")
importFrom("utils", "head", "capture.output")
importFrom("rpart", "rpart", "na.rpart","rpart.control")
importFrom("randomForest", "randomForest")
importFrom("e1071","naiveBayes","svm")
importFrom("MASS","lda","qda")
importFrom("ada","ada")
importFrom("adabag","boosting")
importFrom("glmnet","glmnet","cv.glmnet")
importFrom("kknn","train.kknn","contr.dummy", "contr.ordinal")
importFrom("nnet", "nnet")
importFrom("neuralnet","neuralnet")
importFrom("xgboost","xgboost","xgb.DMatrix", "xgb.train")
importFrom("dummies","dummy.data.frame")
importFrom("graphics", "plot","grid", "segments")
importFrom("stringr","str_detect")
importFrom("glue","glue")
importFrom("scales","percent")
importFrom("grDevices", "hcl")
importFrom("ROCR", "prediction","performance")
import("dplyr")
import("ggplot2")


S3method(predict, qda.prmdt)
S3method(predict, lda.prmdt)
S3method(predict, ada.prmdt)
S3method(predict, adabag.prmdt)
S3method(predict, bayes.prmdt)
S3method(predict, knn.prmdt)
S3method(predict, nnet.prmdt)
S3method(predict, neuralnet.prmdt)
S3method(predict, randomForest.prmdt)
S3method(predict, rpart.prmdt)
S3method(predict, svm.prmdt)
S3method(predict, xgb.Booster.prmdt)
S3method(predict, glm.prmdt)
S3method(predict, glmnet.prmdt)
S3method(print, prmdt)
S3method(plot, prmdt)
S3method(print, prediction.prmdt)
S3method(print, indexes.prmdt)
